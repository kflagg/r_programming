[
["index.html", "An Introduction to Object-Oriented Programming Using R Syllabus Learning Outcomes Materials Course Outline", " An Introduction to Object-Oriented Programming Using R K.A. Flagg May 10, 2017 Syllabus Statistics and Data Science are fields that increasingly require computational problem-solving skills and bespoke solutions that are not implemented in point-and-click software. Thus, programming languages developed for scientific computing have become ubiquitous, and the free R language (R Core Team 2017) is now central to many Statistics courses and jobs. Unfortunately, Statistics education often focuses exclusively on using R as a tool for implementing and demonstrating statistical concepts; this does a disservice to students who are left to fend for themselves when presented tasks or error messages that do not fit into their set of familiar R experiences. Students in Statistics programs need to be R programmers, not just R users. Therefore, the goal of this course is to teach you to think like a programmer. This course will teach you both R and the concepts of object-oriented programming. If you are an aspiring statistician who wants to improve in either or both of those areas, this course is for you. If you have no R or programming experience, you will get a solid foundation in both. If you have used R before but had no formal programming training, this course will make you a much more effective R programmer. If you have had training as an object-oriented programmer, you will learn the R language and how to apply object-oriented programming to statistical analysis. Learning Outcomes Upon completion of this course, you will be able to: Explain how computers interpret and execute code. Evaluate conditional statements manually and in R. Describe and implement functions, objects, and methods in R. Develop conceptual models of programs and translate them into code. Debug your own programs and implement error/warning messages in R. Materials Naturally, you will need a recent version of R. The primary text for this course is R for Data Science (Wickham and Grolemund 2017). The required readings will be assigned from the most up-to-date online version, but you may purchase a physical copy if you wish. This book teaches a useful and standard set of R tools, and is organized to emphasize analysis and communication more than programming (but the brief section on programming is excellent). Please note that we will cover the topics in a very different order from how they are presented in the book and I will frequently point out the differences in pedagogical philosophy between statisticians and computer scientists. I will adapt additional material from The Art of R Programming (Matloff 2011). This is a great reference for the basic features and programming constructs of R, but acquiring your own copy is optional. Course Outline This course is in development, but the following is a tentative list of topics that will be included. R Code Input, output, running code Data Types and Operations Basic variable types (character, numeric, logical) Mathematical operations Special values (NULL, Inf, NaN) Data Structures Vectors, matrices, arrays, lists, data frames Conditional Execution and Loops Functions Applying Functions Objects and Methods Introduction to Packages "],
["r-code.html", "1 R Code", " 1 R Code print, cat typing in the terminal, source, Rscript Comments The file examples/intro_example.r contains the following code. # Add two numbers. 2 + 3 In the R terminal, use the source function to run the code in the file. The print.eval = TRUE is an argument to the function which tells R to print the results of any expressions in the source file. source(&#39;examples/intro_example.r&#39;, print.eval = TRUE) [1] 5 From the system terminal or command prompt, you can use the Rscript command execute R code saved in a file. Rscript examples/intro_example.r [1] 5 "],
["data-types-and-operations.html", "2 Data Types and Operations", " 2 Data Types and Operations characters numeric (integer and double) logical "],
["data-structures.html", "3 Data Structures 3.1 Vectors 3.2 Matrices and Arrays 3.3 Lists 3.4 Data Frames", " 3 Data Structures 3.1 Vectors 3.2 Matrices and Arrays 3.3 Lists 3.4 Data Frames "],
["conditional-execution-and-loops.html", "4 Conditional Execution and Loops", " 4 Conditional Execution and Loops sky &lt;- &#39;blue&#39; if(sky == &#39;blue&#39;){ cat(&#39;Earth&#39;) }else if(sky == &#39;ref&#39;){ cat(&#39;Mars&#39;) }else cat(&#39;Where are we?&#39;) Earth "],
["references.html", "References", " References "]
]
